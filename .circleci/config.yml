version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5

executors:
  my-executor:
    docker:
      - image: humancompatibleai/adversarial_policies:base
    working_directory: /adversarial-policies
    environment:
      # If you change these, also change scripts/code_checks.sh
      SRC_FILES: src/ tests/ setup.py
      TYPECHECK_FILES: src/  tests/ setup.py
      NUM_CPUS: 2  # more CPUs visible but we're throttled to 2, which breaks auto-detect

commands:
  dependencies:
    # You must still manually update the Docker image if any
    # binary (non-Python) dependencies change.
    description: "Check out and update Python dependencies."
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          # MUJOCO_KEY is defined in a CircleCI context
          # Do some sanity checks to make sure key works
          command: |
            curl -o /root/.mujoco/mjkey.txt ${MUJOCO_KEY}
            md5sum /root/.mujoco/mjkey.txt
            USE_MPI=True ./ci/build_venv.sh
            python -c "import mujoco_py"
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: install adversarial-policies
          # Build a wheel then install to avoid copying whole directory (pip issue #2195)
          command: |
            . ./venv/bin/activate
            python setup.py sdist bdist_wheel
            pip install --upgrade dist/aprl-*.whl
jobs:
  lintandtype:
    executor: my-executor

    steps:
      - dependencies
      - run:
          name: flake8
          command: flake8 ${SRC_FILES}

      - run:
          name: black
          command: black --check ${SRC_FILES}

      - run:
          name: codespell
          command: codespell -I .codespell.skip --skip='*.pyc,*.pkl,*.npz' ${SRC_FILES}

      - run:
          name: pytype
          command: pytype ${TYPECHECK_FILES}

  unit-test:
    executor: my-executor
    parallelism: 4
    steps:
      - dependencies

      - run:
          name: run tests
          command: |
            pytest --cov=venv/lib/python3.7/site-packages/aprl --cov=tests \
                   --junitxml=/tmp/test-reports/junit.xml --no-success-flaky-report \
                   --shard-id=${CIRCLE_NODE_INDEX} --num-shards=${CIRCLE_NODE_TOTAL} \
                    -n ${NUM_CPUS} -vv tests/
            mv .coverage .coverage.eval
            coverage combine  # rewrite paths from virtualenv to src/
      - codecov/upload

      - store_artifacts:
          path: /tmp/test-reports
          destination: test-reports
      - store_test_results:
          path: /tmp/test-reports
          unit-test:

workflows:
  version: 2
  test:
    jobs:
      - lintandtype:
          context: MuJoCo
      - unit-test:
          context: MuJoCo
