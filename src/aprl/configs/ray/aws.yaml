cluster_name: aprl
min_workers: 0
max_workers: 10
initial_workers: 0
target_utilization_fraction: 0.8
idle_timeout_minutes: 5

docker:
  image: humancompatibleai/adversarial_policies:latest
  container_name: ray
  run_options:
    # NOTE: MUJOCO_KEY must be set in environment (it is in our AMI)
    - "--env MUJOCO_KEY=${MUJOCO_KEY}"
    # Open port 6006 for TensorBoard
    - "-p 6006:6006"
    # These are to work around Ray bug #4403.
    - "-v /home/ubuntu/ray_results:/home/ubuntu/ray_results"
    - "-v /home/ubuntu/aws_private:/home/ubuntu/aws_private"
    - "--env LOGNAME=ubuntu"
    - "--env HOME=/home/ubuntu"
    - "--env DATA_LOC=/home/ubuntu/aws_private"
    - "--env ADVERSARY_PATHS=/home/ubuntu/aws_private/multi_train/paper/highest_win_policies_and_rates.json"

provider:
  type: aws
  region: us-west-2
  availability_zone: us-west-2a,us-west-2b,us-west-2c,us-west-2d
  cache_stopped_nodes: False  # TODO(adam): remove when Ray issue #6128 is closed

# How Ray will authenticate with newly launched nodes.
auth:
  ssh_user: ubuntu
  ssh_private_key: ~/.ssh/adversarial-policies

head_node:
  InstanceType: c5.4xlarge
  ImageId: ami-03cb2176bb0ac9ec7  # CHAI Ubuntu 18.04
  KeyName: Adversarial Policies
  BlockDeviceMappings:
    - DeviceName: /dev/sda1
      Ebs:
        VolumeSize: 50
        VolumeType: gp2

worker_nodes:
  InstanceType: c5.9xlarge  # half a machine, less likely to get preempted than full c5.18xlarge
  ImageId: ami-03cb2176bb0ac9ec7  # CHAI Ubuntu 18.04
  KeyName: Adversarial Policies
  BlockDeviceMappings:
    - DeviceName: /dev/sda1
      Ebs:
        VolumeSize: 50
        VolumeType: gp2
  InstanceMarketOptions:
    MarketType: spot
  IamInstanceProfile:
    Name: EC2AccessS3

# List of shell commands to run to set up nodes.
initialization_commands:  # before entering Docker
  - "curl -L -o $HOME/goofys https://github.com/kahing/goofys/releases/latest/download/goofys && chmod a+x $HOME/goofys"
  - "[[ -d /home/ubuntu/aws_private ]] || sudo mkdir /home/ubuntu/aws_private"
  - sudo $HOME/goofys -o allow_other --file-mode=0666 --dir-mode=0777 adversarial-policies /home/ubuntu/aws_private
  # TODO(adam): remove once Ray #6111 merged
  - docker pull humancompatibleai/adversarial_policies:latest
setup_commands:
  # Part of Ray bug #4403 workaround.
  - ln -sf /root/.mujoco /home/ubuntu/.mujoco
  - ln -sf /home/ubuntu/ray_bootstrap_key.pem /root/ray_bootstrap_key.pem
head_setup_commands: []
worker_setup_commands: []

head_start_ray_commands:
  # Set up alarm for if node is left running by mistake
  # Then (re)start Ray.
  - >
    DEBIAN_FRONTEND=noninteractive apt-get install -y cloud-guest-utils &&
    git remote set-url origin https://github.com/HumanCompatibleAI/adversarial-policies.git &&
    git pull &&
    . /adversarial-policies/ci/prepare_env.sh &&
    python3 setup.py sdist bdist_wheel &&
    pip install --force dist/aprl-*.whl &&
    /adversarial-policies/scripts/aws/cloudwatch.sh &&
    ray stop &&
    ulimit -n 65536 &&
    ray start --head --redis-port=6379 --object-manager-port=8076 \
              --autoscaling-config=~/ray_bootstrap_config.yaml --num-cpus=8

worker_start_ray_commands:
  # (Re)start spot termination monitor.
  # Then (re)start Ray.
  - >
    (pkill -x -f "python /adversarial-policies/scripts/aws/termination.py" || true) &&
    git remote set-url origin https://github.com/HumanCompatibleAI/adversarial-policies.git &&
    git pull &&
    . /adversarial-policies/ci/prepare_env.sh &&
    python3 setup.py sdist bdist_wheel &&
    pip install --force dist/aprl-*.whl &&
    ray stop &&
    (python /adversarial-policies/scripts/aws/termination.py >> /tmp/aws_termination.log 2>&1 &) &&
    ulimit -n 65536 &&
    ray start --redis-address=$RAY_HEAD_IP:6379 --object-manager-port=8076
